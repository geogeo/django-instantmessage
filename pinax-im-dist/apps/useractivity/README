useractivity
============

This small app allows you to get a list of online users. This is accomplished, 
by introducing useractivity.middleware.UserActivityMiddleware, which periodically
captures user's ip address, and dumps it to the database along with the current 
timestamp. The period is defined by ACTIVITY_UPDATE_DELAY option, which equals
to the number of seconds before the next snapshot is taken.

User activity data in the database is then processed by celery.PeriodicTask,
which populates the rabbitmq exchange, allowing to get a query set of users 
without hitting the database. Users query set is serialized to ACTIVITY_SERIALIZER
format (default: "json"), limiting model fields to ACTIVITY_USER_FIELDS 
(default: ["username""]).

Summary:
-------

1. Settings
   - ACTIVITY_SERIALIZER serializer, used to pack the users query set
   - ACTIVITY_USER_FIELDS a list of user fields to serialize
   - ACTIVITY_UPDATE_DELAY number of seconds, before user activity data will be updated
2. Middleware Classes
   - useractivity.middleware.UserActivityMiddleware
3. Context processors
   - useractivity.context_processors.online_users

Requirements:
-------------
* celery
* carrot

Installation:
-------------
Install celery.
Add "useractivity" and "celery" to INSTALLED_APPS
Add "useractivity.middleware.UserActivityMiddleware" to MIDDLEWARE_CLASSES
Add ACTIVITY_UPDATE_DELAY option to settings.py
Sync the database.
Done!

Note:
-----
Don't forget to start celerybeat along with django server:
manage.py celeryd -B
